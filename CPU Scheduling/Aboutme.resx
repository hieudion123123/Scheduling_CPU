<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>